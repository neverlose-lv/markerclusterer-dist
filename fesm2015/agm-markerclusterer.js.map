{"version":3,"file":"agm-markerclusterer.js","sources":["../../../packages/markerclusterer/src/lib/services/managers/cluster-manager.ts","../../../packages/markerclusterer/src/lib/directives/marker-cluster.ts","../../../packages/markerclusterer/src/lib/marker-clusterer.module.ts","../../../packages/markerclusterer/src/public-api.ts","../../../packages/markerclusterer/src/agm-markerclusterer.ts"],"sourcesContent":["import { AgmMarker, GoogleMapsAPIWrapper, MarkerManager } from '@agm/core';\nimport { Injectable, NgZone } from '@angular/core';\nimport { MarkerClustererOptions } from '@google/markerclustererplus';\nimport MarkerClusterer from '@google/markerclustererplus';\nimport { Observable, Subscriber } from 'rxjs';\nimport { AgmMarkerCluster } from '../../directives/marker-cluster';\n\n@Injectable()\nexport class ClusterManager extends MarkerManager {\n  private _clustererInstance: Promise<MarkerClusterer>;\n  private _resolver: (cluster: MarkerClusterer) => void;\n\n  constructor(\n    protected _mapsWrapper: GoogleMapsAPIWrapper,\n    protected _zone: NgZone\n  ) {\n    super(_mapsWrapper, _zone);\n    this._clustererInstance = new Promise<MarkerClusterer>((resolver) => {\n      this._resolver = resolver;\n    });\n  }\n\n  init(options: MarkerClustererOptions): void {\n    this._mapsWrapper.getNativeMap().then((map) => {\n      const clusterer = new MarkerClusterer(map, [], options);\n      this._resolver(clusterer);\n    });\n  }\n\n  getClustererInstance(): Promise<MarkerClusterer> {\n    return this._clustererInstance;\n  }\n\n  addMarker(markerDirective: AgmMarker): void {\n    const clusterPromise: Promise<MarkerClusterer> =\n      this.getClustererInstance();\n    const markerPromise = this._mapsWrapper.createMarker(\n      {\n        position: {\n          lat: markerDirective.latitude,\n          lng: markerDirective.longitude,\n        },\n        label: markerDirective.label,\n        draggable: markerDirective.draggable,\n        icon: markerDirective.iconUrl,\n        opacity: markerDirective.opacity,\n        visible: markerDirective.visible,\n        zIndex: markerDirective.zIndex,\n        title: markerDirective.title,\n        clickable: markerDirective.clickable,\n      },\n      false\n    );\n\n    Promise.all([clusterPromise, markerPromise]).then(([cluster, marker]) =>\n      cluster.addMarker(marker)\n    );\n    this._markers.set(markerDirective, markerPromise);\n  }\n\n  deleteMarker(marker: AgmMarker): Promise<void> {\n    const markerPromise = this._markers.get(marker);\n    if (markerPromise == null) {\n      // marker already deleted\n      return Promise.resolve();\n    }\n    return markerPromise.then((m: google.maps.Marker) => {\n      this._zone.run(() => {\n        m.setMap(null);\n        this.getClustererInstance().then((cluster) => {\n          cluster.removeMarker(m);\n          this._markers.delete(marker);\n        });\n      });\n    });\n  }\n\n  getMarkers(): Promise<any> {\n    return this.getClustererInstance().then((cluster: MarkerClusterer) => {\n      return cluster.getMarkers();\n    });\n  }\n\n  clearMarkers(): Promise<void> {\n    return this.getClustererInstance().then((cluster) => {\n      cluster.clearMarkers();\n    });\n  }\n\n  setGridSize(c: AgmMarkerCluster): void {\n    this.getClustererInstance().then((cluster) => {\n      cluster.setGridSize(c.gridSize);\n    });\n  }\n\n  setMaxZoom(c: AgmMarkerCluster): void {\n    this.getClustererInstance().then((cluster) => {\n      cluster.setMaxZoom(c.maxZoom);\n    });\n  }\n\n  setStyles(c: AgmMarkerCluster): void {\n    this.getClustererInstance().then((cluster) => {\n      cluster.setStyles(c.styles);\n    });\n  }\n\n  setZoomOnClick(c: AgmMarkerCluster): void {\n    this.getClustererInstance().then((cluster) => {\n      if (c.zoomOnClick !== undefined) {\n        cluster.setZoomOnClick(c.zoomOnClick);\n      }\n    });\n  }\n\n  setAverageCenter(c: AgmMarkerCluster): void {\n    this.getClustererInstance().then((cluster) => {\n      if (c.averageCenter !== undefined) {\n        cluster.setAverageCenter(c.averageCenter);\n      }\n    });\n  }\n\n  setImagePath(c: AgmMarkerCluster): void {\n    this.getClustererInstance().then((cluster) => {\n      if (c.imagePath !== undefined) {\n        cluster.setImagePath(c.imagePath);\n      }\n    });\n  }\n\n  setMinimumClusterSize(c: AgmMarkerCluster): void {\n    this.getClustererInstance().then((cluster) => {\n      if (c.minimumClusterSize !== undefined) {\n        cluster.setMinimumClusterSize(c.minimumClusterSize);\n      }\n    });\n  }\n\n  setImageExtension(c: AgmMarkerCluster): void {\n    this.getClustererInstance().then((cluster) => {\n      if (c.imageExtension !== undefined) {\n        cluster.setImageExtension(c.imageExtension);\n      }\n    });\n  }\n\n  createClusterEventObservable<T>(eventName: string): Observable<T> {\n    return new Observable((subscriber: Subscriber<T>) => {\n      this._zone.runOutsideAngular(() => {\n        this._clustererInstance.then((m: MarkerClusterer) => {\n          m.addListener(eventName, (e: T) =>\n            this._zone.run(() => subscriber.next(e))\n          );\n        });\n      });\n    });\n  }\n\n  setCalculator(c: AgmMarkerCluster): void {\n    this.getClustererInstance().then((cluster) => {\n      if (typeof c.calculator === 'function') {\n        cluster.setCalculator(c.calculator);\n      }\n    });\n  }\n\n  async setClusterClass(c: AgmMarkerCluster) {\n    if (typeof c.clusterClass !== 'undefined') {\n      const instance = await this.getClustererInstance();\n      instance.setClusterClass(c.clusterClass);\n    }\n  }\n\n  async setEnableRetinaIcons(c: AgmMarkerCluster) {\n    if (typeof c.enableRetinaIcons !== 'undefined') {\n      const instance = await this.getClustererInstance();\n      instance.setEnableRetinaIcons(c.enableRetinaIcons);\n    }\n  }\n\n  async setIgnoreHidden(c: AgmMarkerCluster) {\n    if (typeof c.ignoreHidden !== 'undefined') {\n      const instance = await this.getClustererInstance();\n      instance.setIgnoreHidden(c.ignoreHidden);\n    }\n  }\n\n  async setImageSizes(c: AgmMarkerCluster) {\n    if (typeof c.imageSizes !== 'undefined') {\n      const instance = await this.getClustererInstance();\n      instance.setImageSizes(c.imageSizes);\n    }\n  }\n\n  async setTitle(c: AgmMarkerCluster) {\n    if (typeof c.title !== 'undefined') {\n      const instance = await this.getClustererInstance();\n      instance.setTitle(c.title);\n    }\n  }\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChange } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { InfoWindowManager, MarkerManager } from '@agm/core';\nimport { ClusterIconStyle, MarkerClustererOptions } from '@google/markerclustererplus';\nimport { Calculator } from '@google/markerclustererplus/dist/markerclusterer';\nimport { ClusterManager } from '../services/managers/cluster-manager';\n\n// tslint:disable: jsdoc-format\n/**\n * AgmMarkerCluster clusters map marker if they are near together\n *\n * ### Example\n```typescript\nimport { Component } from '@angular/core';\n\n@Component({\n selector: 'my-map-cmp',\n styles: [`\n   agm-map {\n     height: 300px;\n   }\n `],\n template: `\n   <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n     <agm-marker-cluster>\n       <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n       </agm-marker>\n       <agm-marker [latitude]=\"lat2\" [longitude]=\"lng2\" [label]=\"'N'\">\n       </agm-marker>\n     </agm-marker-cluster>\n   </agm-map>\n `\n})\n```\n */\n// tslint:enable: jsdoc-format\n@Directive({\n  selector: 'agm-marker-cluster',\n  providers: [\n    ClusterManager,\n    { provide: MarkerManager, useExisting: ClusterManager },\n    InfoWindowManager,\n  ],\n})\nexport class AgmMarkerCluster implements OnDestroy, OnChanges, OnInit, MarkerClustererOptions {\n  /**\n   * The grid size of a cluster in pixels\n   */\n  @Input() gridSize: number;\n\n  /**\n   * The maximum zoom level that a marker can be part of a cluster.\n   */\n  @Input() maxZoom: number;\n\n  /**\n   * Whether the default behaviour of clicking on a cluster is to zoom into it.\n   */\n  @Input() zoomOnClick: boolean;\n\n  /**\n   * Whether the center of each cluster should be the average of all markers in the cluster.\n   */\n  @Input() averageCenter: boolean;\n\n  /**\n   * The minimum number of markers to be in a cluster before the markers are hidden and a count is shown.\n   */\n  @Input() minimumClusterSize: number;\n\n  /**\n   * An object that has style properties.\n   */\n  @Input() styles: ClusterIconStyle[];\n\n  /**\n   * A function that calculates the cluster style and text based on the markers in the cluster.\n   */\n  @Input() calculator: Calculator;\n\n  @Input() imagePath: string;\n  @Input() imageExtension: string;\n\n  /**\n   * The name of the CSS class defining general styles for the cluster markers.\n   * Use this class to define CSS styles that are not set up by the code that\n   * processes the `styles` array.\n   *\n   * @defaultValue 'cluster'\n   */\n  @Input() clusterClass: string;\n\n  /**\n   * Whether to allow the use of cluster icons that have sizes that are some\n   * multiple (typically double) of their actual display size. Icons such as\n   * these look better when viewed on high-resolution monitors such as Apple's\n   * Retina displays. Note: if this property is `true`, sprites cannot be used\n   * as cluster icons.\n   *\n   * @defaultValue false\n   */\n  @Input() enableRetinaIcons: boolean;\n\n  /**\n   * Whether to ignore hidden markers in clusters. You may want to set this to\n   * `true` to ensure that hidden markers are not included in the marker count\n   * that appears on a cluster marker (this count is the value of the `text`\n   * property of the result returned by the default `calculator`). If set to\n   * `true` and you change the visibility of a marker being clustered, be sure\n   * to also call `MarkerClusterer.repaint()`.\n   *\n   * @defaultValue false\n   */\n  @Input() ignoreHidden: boolean;\n\n  /**\n   * An array of numbers containing the widths of the group of\n   * `<imagePath><n>.<imageExtension>` image files. (The images are assumed to\n   * be square.)\n   *\n   * @defaultValue [53, 56, 66, 78, 90]\n   */\n  @Input() imageSizes: number[];\n\n  /**\n   * The tooltip to display when the mouse moves over a cluster marker.\n   * (Alternatively, you can use a custom `calculator` function to specify a\n   * different tooltip for each cluster marker.)\n   *\n   * @defaultValue ''\n   */\n  @Input() title: string;\n\n  @Output() clusterClick: EventEmitter<void> = new EventEmitter<void>();\n\n  private _observableSubscriptions: Subscription[] = [];\n\n  constructor(private _clusterManager: ClusterManager) { }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._clusterManager.clearMarkers();\n    this._observableSubscriptions.forEach((s) => s.unsubscribe());\n  }\n\n  /** @internal */\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    // tslint:disable: no-string-literal\n    if (changes['gridSize']) {\n      this._clusterManager.setGridSize(this);\n    }\n    if (changes['maxZoom']) {\n      this._clusterManager.setMaxZoom(this);\n    }\n    if (changes['zoomOnClick']) {\n      this._clusterManager.setZoomOnClick(this);\n    }\n    if (changes['averageCenter']) {\n      this._clusterManager.setAverageCenter(this);\n    }\n    if (changes['minimumClusterSize']) {\n      this._clusterManager.setMinimumClusterSize(this);\n    }\n    if (changes['imagePath']) {\n      this._clusterManager.setImagePath(this);\n    }\n    if (changes['imageExtension']) {\n      this._clusterManager.setImageExtension(this);\n    }\n    if (changes['calculator']) {\n      this._clusterManager.setCalculator(this);\n    }\n    if (changes['styles']) {\n      this._clusterManager.setStyles(this);\n    }\n    if (changes['clusterClass']) {\n      this._clusterManager.setClusterClass(this);\n    }\n    if (changes['enableRetinaIcons']) {\n      this._clusterManager.setEnableRetinaIcons(this);\n    }\n    if (changes['ignoreHidden']) {\n      this._clusterManager.setIgnoreHidden(this);\n    }\n    if (changes['imageSizes']) {\n      this._clusterManager.setImageSizes(this);\n    }\n    if (changes['title']) {\n      this._clusterManager.setTitle(this);\n    }\n    // tslint:enable: no-string-literal\n\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      {\n        name: 'clusterclick',\n        handler: () => this.clusterClick.emit(),\n      },\n    ];\n    handlers.forEach((obj) => {\n      const os = this._clusterManager.createClusterEventObservable(obj.name).subscribe(obj.handler);\n      this._observableSubscriptions.push(os);\n    });\n  }\n\n  /** @internal */\n  ngOnInit() {\n    this._addEventListeners();\n    this._clusterManager.init({\n      averageCenter: this.averageCenter,\n      calculator: this.calculator,\n      clusterClass: this.clusterClass,\n      enableRetinaIcons: this.enableRetinaIcons,\n      gridSize: this.gridSize,\n      ignoreHidden: this.ignoreHidden,\n      imageExtension: this.imageExtension,\n      imagePath: this.imagePath,\n      imageSizes: this.imageSizes,\n      maxZoom: this.maxZoom,\n      minimumClusterSize: this.minimumClusterSize,\n      styles: this.styles,\n      title: this.title,\n      zoomOnClick: this.zoomOnClick,\n    });\n  }\n}\n","import { AgmCoreModule } from '@agm/core';\nimport { NgModule } from '@angular/core';\nimport { AgmMarkerCluster } from './directives/marker-cluster';\n\n@NgModule({\n  imports: [AgmCoreModule],\n  declarations: [AgmMarkerCluster],\n  exports: [AgmMarkerCluster],\n})\nexport class AgmMarkerClustererModule {\n}\n","/*\n * Public API Surface of markerclusterer\n */\n\nexport * from './lib/services';\nexport * from './lib/directives';\nexport * from './lib/marker-clusterer.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}